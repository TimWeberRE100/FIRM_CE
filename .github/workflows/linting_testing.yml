name: linting and testing
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  push:
    branches:
      - main
jobs:
  flake8_py312:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup flake8 annotations
        uses: rbialon/flake8-annotations@v1

      - name: Lint with flake8
        if: always()
        run: |
          pip install flake8
          flake8 . --count --statistics

  bandit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Security check - Bandit
        uses: joshvote/bandit-report-artifacts@v0.0.6
        with:
          project_path: src/
          ignore_failure: false

      - name: Security check report artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: Security report
          path: output/security_report.txt

  black_formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: psf/black@stable

  pytest_py312:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Run Pytest
        run: |
          pip install -e .[test]
      - name: Test
        run:
          pytest --junit-xml=.test_report.xml

      - name: Upload Results
        uses: test-summary/action@v1
        with:
          paths: .test_report.xml
        if: always()